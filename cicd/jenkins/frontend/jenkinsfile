pipeline {
  agent any
  stages {
    stage('git clone') {
      steps {
        git branch: 'frontend', url: 'https://github.com/beyond-sw-camp/be06-4th-SYNergy.git'
      }
    }
    stage('npm install & build') {
      steps {
        dir('frontend') {
          sh "npm install"
          sh "npm run build"
        }
      }
    }
    stage('Docker Push') {
      steps {
        // Docker build
        sh "docker build --tag 706com/frontend:${env.BUILD_NUMBER} ."
        //Docker Login
        sh "echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_USER} --password-stdin"
        //Docker imageHub push
        sh "docker push 706com/frontend:${env.BUILD_NUMBER}"
      }
    }
    stage('SSH transfer') {
        steps {
            script {
                def isOdd = (${env.BUILD_NUMBER}.toInteger() % 2 != 0)
                def deploymentFile = isOdd ? 'Deployment-b.yml' : 'Deployment-g.yml'
                def otherDeployment = isOdd ? 'Deployment-g.yml' : 'Deployment-b.yml'
                def newSelector = isOdd ? 'blue' : 'green'
                def serviceName = 'frontend-svc'

                def deploymentName = deploymentFile.replace('Deployment-', '').replace('.yml', '')

                // SSH 전송 플러그인 사용
                sshPublisher(
                    // 오류 발생 시 진행을 멈춤
                    continueOnError: false,
                    // 오류 발생 시 파이프라인을 실패시킴
                    failOnError: true,
                    // 전송자 목록
                    publishers: [
                        // SSH 전송 설명
                        sshPublisherDesc(
                            // SSH 서버 설정 이름 지정 ( master 노드 )
                            configName: "k8s-master",
                            // 자세한 출력 모드 활성화
                            verbose: true,
                            transfers: [
                                sshTransfer(
                                    // 전송할 파일 지정
                                    sourceFiles: "cicd/k8s/frontend/${deploymentFile}",
                                    // 원격 디렉토리 지정 ( 원격서버로 파일을 전송할 위치 )
                                    remoteDirectory: "/home/test/",
                                    // 전송 후 야멜 파일의 VERSION을 파이프라인 빌드 숫자로 변경
                                    execCommand: """
                                        sed -i "s/latest/${env.BUILD_NUMBER}/g" /home/test/cicd/k8s/frontend/${deploymentFile}
                                        kubectl apply -f /home/test/cicd/k8s/frontend/${deploymentFile}

                                        kubectl scale deployment ${deploymentName} --replicas=2

                                        kubectl patch service ${serviceName} -p '{"spec":{"selector":{"deployment":"${newSelector}","type":"frontend"}}}'

                                        kubectl scale deployment ${otherDeployment} --replicas=0
                                    """
                                )
                            ]
                        )
                    ]
                )
            }
        }
    }
  }
}